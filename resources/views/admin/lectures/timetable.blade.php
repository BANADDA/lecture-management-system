@extends('layouts.app')

@section('content')
<x-navigation>
    <div class="dashboard-content">
        <!-- Page Header -->
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-body d-flex justify-content-between align-items-center py-3">
                <div>
                    <h5 class="fw-bold mb-0">Monthly Timetable</h5>
                    <p class="text-muted small mb-0">View and export lecture schedules in a monthly timetable format</p>
                </div>
                <a href="{{ route('admin.lectures.index') }}" class="btn btn-outline-secondary btn-sm">
                    <i class="fas fa-arrow-left me-1"></i> Back to Lectures
                </a>
            </div>
        </div>

        <!-- Monthly Timetable Component -->
        <div class="card shadow-sm border-0">
            <div class="card-body">
                <!-- Month/Year Selector -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h5 class="fw-bold" id="current-month-display">March 2025</h5>
                    <div class="d-flex gap-2">
                        <button id="prev-month" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-chevron-left"></i> Previous
                        </button>
                        <button id="next-month" class="btn btn-outline-secondary btn-sm">
                            Next <i class="fas fa-chevron-right"></i>
                        </button>
                        <button id="export-timetable" class="btn btn-primary btn-sm">
                            <i class="fas fa-file-pdf me-1"></i> Export PDF
                        </button>
                    </div>
                </div>

                <!-- Timetable Weeks Container -->
                <div id="timetable-container">
                    <!-- Timetable weeks will be generated by JavaScript -->
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">Loading timetable...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-navigation>

@push('styles')
<style>
    /* Dashboard content styling */
    .dashboard-content {
        padding: 1.5rem;
        background-color: #f8f9fa;
        min-height: 100vh;
    }

    /* Card styling */
    .card {
        border-radius: 0.5rem;
        overflow: hidden;
        border: none;
    }

    /* Timetable styling */
    .week-header {
        background-color: #f0f0f0;
        padding: 10px;
        font-weight: 600;
        border-radius: 5px 5px 0 0;
        margin-top: 1.5rem;
    }

    .timetable-grid {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        border: 1px solid #dee2e6;
        border-top: none;
        margin-bottom: 1.5rem;
    }

    .timetable-header {
        background-color: #1a4377;
        color: white;
        padding: 10px;
        text-align: center;
        border-right: 1px solid #dee2e6;
        font-weight: 500;
    }

    .timetable-cell {
        min-height: 200px;
        padding: 10px;
        border-right: 1px solid #dee2e6;
        border-top: 1px solid #dee2e6;
    }

    .timetable-cell:last-child {
        border-right: none;
    }

    .day-date {
        display: inline-block;
        background-color: #e9ecef;
        border-radius: 50%;
        width: 25px;
        height: 25px;
        text-align: center;
        line-height: 25px;
        margin-left: 5px;
    }

    .lecture-card {
        background-color: #f8f9fa;
        border-left: 3px solid #0d6efd;
        border-radius: 3px;
        padding: 8px;
        margin-bottom: 8px;
        font-size: 0.9rem;
    }

    .lecture-time {
        font-weight: bold;
        color: #0d6efd;
    }

    .lecture-course {
        font-weight: 600;
        margin-bottom: 3px;
    }

    .lecture-info {
        font-size: 0.8rem;
        color: #6c757d;
    }

    .attendance-bar {
        height: 4px;
        background-color: #e9ecef;
        border-radius: 2px;
        margin-top: 5px;
        overflow: hidden;
    }

    .attendance-value {
        height: 100%;
        background-color: #0dcaf0;
    }

    .no-lectures {
        color: #adb5bd;
        font-style: italic;
        text-align: center;
        padding: 70px 0;
    }
</style>
@endpush

@push('scripts')
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Current month and year
        let currentMonth = new Date().getMonth() + 1; // 1-12
        let currentYear = new Date().getFullYear();

        // DOM elements
        const prevMonthBtn = document.getElementById('prev-month');
        const nextMonthBtn = document.getElementById('next-month');
        const exportBtn = document.getElementById('export-timetable');
        const monthDisplay = document.getElementById('current-month-display');
        const timetableContainer = document.getElementById('timetable-container');

        // Month names
        const monthNames = [
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ];

        // Update month display
        function updateMonthDisplay() {
            monthDisplay.textContent = `${monthNames[currentMonth - 1]} ${currentYear}`;
        }

        // Generate timetable data (demo version)
        function generateTimetableData() {
            // In a real app, this would be an AJAX call to your backend
            // For demo purposes, we'll generate random data

            const weeksInMonth = getWeeksInMonth(currentYear, currentMonth - 1);
            let timetableData = {};

            weeksInMonth.forEach(week => {
                timetableData[week] = {
                    monday: [],
                    tuesday: [],
                    wednesday: [],
                    thursday: [],
                    friday: []
                };

                // Add sample lectures
                const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'];
                days.forEach(day => {
                    // Only add lectures to some days (50% chance)
                    if (Math.random() > 0.5) {
                        const lecturesCount = Math.floor(Math.random() * 3) + 1;

                        for (let i = 0; i < lecturesCount; i++) {
                            let startHour = 8 + Math.floor(Math.random() * 8);
                            let endHour = startHour + 1 + Math.floor(Math.random() * 2);

                            timetableData[week][day].push({
                                id: `lecture-${week}-${day}-${i}`,
                                course_code: `CS${100 + Math.floor(Math.random() * 400)}`,
                                course_name: "Introduction to Programming",
                                lecturer: "Dr. Jane Smith",
                                room: `Room ${100 + Math.floor(Math.random() * 100)}`,
                                start_time: `${startHour}:${Math.random() > 0.5 ? '00' : '30'} ${startHour < 12 ? 'AM' : 'PM'}`,
                                end_time: `${endHour}:${Math.random() > 0.5 ? '00' : '30'} ${endHour < 12 ? 'AM' : 'PM'}`,
                                duration: "1 hr 30 min",
                                date: `2023-${currentMonth.toString().padStart(2, '0')}-${(Math.floor(Math.random() * 28) + 1).toString().padStart(2, '0')}`,
                                attendance_percentage: Math.floor(Math.random() * 100)
                            });
                        }
                    }
                });
            });

            return { weeksInMonth, timetableData };
        }

        // Get weeks in a month
        function getWeeksInMonth(year, month) {
            const weeks = [];
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);

            let currentDate = new Date(firstDay);
            while (currentDate <= lastDay) {
                const weekNumber = getWeekNumber(currentDate);
                if (!weeks.includes(weekNumber)) {
                    weeks.push(weekNumber);
                }
                currentDate.setDate(currentDate.getDate() + 1);
            }

            return weeks;
        }

        // Get week number
        function getWeekNumber(date) {
            const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
            d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));
            const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));
            return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);
        }

        // Render timetable
        function renderTimetable() {
            const { weeksInMonth, timetableData } = generateTimetableData();
            let html = '';

            weeksInMonth.forEach(week => {
                html += `
                    <div class="week-header">Week ${week}</div>
                    <div class="timetable-grid">
                        <div class="timetable-header">Monday</div>
                        <div class="timetable-header">Tuesday</div>
                        <div class="timetable-header">Wednesday</div>
                        <div class="timetable-header">Thursday</div>
                        <div class="timetable-header">Friday</div>
                `;

                // Days
                ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'].forEach(day => {
                    const lectures = timetableData[week][day];

                    html += `<div class="timetable-cell">`;

                    if (lectures.length === 0) {
                        html += `<div class="no-lectures">No lectures</div>`;
                    } else {
                        lectures.forEach(lecture => {
                            html += `
                                <div class="lecture-card">
                                    <div class="lecture-time">${lecture.start_time} - ${lecture.end_time}</div>
                                    <div class="lecture-course">${lecture.course_code}: ${lecture.course_name}</div>
                                    <div class="lecture-info">
                                        <span>Room: ${lecture.room}</span> |
                                        <span>Lecturer: ${lecture.lecturer}</span>
                                    </div>
                                    <div class="attendance-bar">
                                        <div class="attendance-value" style="width: ${lecture.attendance_percentage}%"></div>
                                    </div>
                                </div>
                            `;
                        });
                    }

                    html += `</div>`;
                });

                html += `</div>`;
            });

            timetableContainer.innerHTML = html;
        }

        // Navigate to previous month
        prevMonthBtn.addEventListener('click', function() {
            if (currentMonth === 1) {
                currentMonth = 12;
                currentYear--;
            } else {
                currentMonth--;
            }
            updateMonthDisplay();
            renderTimetable();
        });

        // Navigate to next month
        nextMonthBtn.addEventListener('click', function() {
            if (currentMonth === 12) {
                currentMonth = 1;
                currentYear++;
            } else {
                currentMonth++;
            }
            updateMonthDisplay();
            renderTimetable();
        });

        // Export timetable
        exportBtn.addEventListener('click', function() {
            window.location.href = `{{ route('admin.timetable.export') }}?month=${currentMonth}&year=${currentYear}`;
        });

        // Initialize
        updateMonthDisplay();
        renderTimetable();
    });
</script>
@endpush
@endsection
